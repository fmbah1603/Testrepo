version: 0.2

env:
  shell: bash

phases:

  pre_build:
    on-failure: ABORT
    commands:
      # listing environment variables
      - echo listing environment variables...
      - echo $SERVICE_VERSION
      - echo $AWS_ACCOUNT_ID
      - echo $ECR_REPO
      # getting env variables
      - GIT_COMMIT_ID=$CODEBUILD_RESOLVED_SOURCE_VERSION
      - SHORT_GIT_COMMIT_ID=${GIT_COMMIT_ID:0:7}
      # log into the ECR repository
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

  build:
    on-failure: ABORT
    commands:
      # build the docker image
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO:$SHORT_GIT_COMMIT_ID -f Dockerfile .
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO:latest -f Dockerfile .
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO:$SERVICE_VERSION -f Dockerfile .

  post_build:
    on-failure: ABORT
    commands:
      # push docker image to ECR
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO:$SHORT_GIT_COMMIT_ID
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO:$SERVICE_VERSION
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO:latest
      - docker logout $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
